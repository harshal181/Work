1) List all the books that are written by Author Loni and has price less then 600.
Ans:-> select* from books
    -> where author_name="Loni" and price<600;

2) List the Issue details for the books that are not returned yet.
Ans:-select * from books
    **-> where book_no in(select book_no from issue where return_date is NULL);

3) Update all the blank return_date with 31-Dec-06 excluding 7005 and 7006.
Ans:-update issue
    -> set return_date="06-12-31"

    -> where return_date is NULL

    -> and lib_issue_id not in(7005,7006);


4) List all the Issue details that have books issued for more then 30 days.
Ans:-> select * from issue
    -> where datediff(return_date,issue_date)>30;
5) List all the books that have price in range of 500 to 750 and has category as Database.
Ans:- select * from books
    -> where price between 550 and 750 and category="Database";

6) List all the books that belong to any one of the following
categories Science, Database, Fiction, Management.
Ans:- select * from books
    -> where category in("Science", "Database", "Fiction", "Management");

7) List all the members in the descending order of Penalty due on them.
Ans:-select * from member
    -> order by penalty_amount desc;

8) Modify the price of book with id 103 to Rs 300 and category to RDBMS.
Ans:-update books
    -> set price=300,category="RDBMS"
    -> where book_no=103;

9) List all the books in ascending order of category and descending order of price.
Ans:-
mysql> select * from books
    -> order by category,price desc;
10) List all the books that contain word SQL in the name of the book.
Ans:-select * from books
    -> where book_name like "%SQL%";
11) List the Lib_Issue_Id, Issue_Date, Return_Date and No of day Book was issued.
Ans:- select lib_issue_id,
    ->        issue_date,
    ->        return_date,
    ->        datediff(return_date, issue_date) as days_issued
    -> from issue;



12) Find the details of the member of the Library in the order of their joining the library.
Ans:- select * from member
    -> order by j_date;
13) Display the count of total no of books issued to Member 101.
Ans:-select count(*) as total_books
    -> from issue
    -> where member_id=103;



14) Display the total penalty due for all the members.
Ans:- select sum( penalty_amount) as total_penalty
    -> from member;
15) Display the total no of members
Ans:- select count(*) as total_member from member;
16) Display the total no of books issued
Abns:- select count(*) from books
    -> where book_no in(select book_no from issue);

17) Display the average membership fees paid by all the members.
Ans:-select avg(fees_paid)
    -> from member;
18) List the various categories and count of books in each category.
Ans:- select category,count(*) from books
    -> group by category;
20) Find the maximum, minimum, total and average penalty amount in the member table.
Ans:-> select max(penalty_amount),min(penalty_amount),avg(penalty_amount),sum(penalty_amount) from member;

21) Display the member id and the no of books for each member that
has issued more then 2 books.
Ans:- select member_id ,count(*) from issue
    -> group by member_id
    -> having count(*)>2;

22) Display the member id, book no and no of times the same book is
issued by the member in the descending order of count.
Ans:- select member_id,book_no,count(*)
    -> from issue
    -> group by member_id,book_no
    -> order by count(*)>1 desc;

23) Display the month and no of books issued each month in the
descending order of count.
Ans:-select month(issue_date),book_no,count(*)
    -> from issue
    -> group by month(issue_date),book_no
    -> order by count(*) desc;

24) List the book_no of all the books that are not issued to any member so far.
Ans:select book_no from books
    -> where book_no in(select book_no from issue where issue_date is NULL)
    -> group by book_no;
25) List all the member id that exist in member table and has also at
least one book issued by them.
Ans:- select member_id from member
    -> where member_id in (select member_id from issue where issue_date is not null)
    -> group by member_id;

26) List the member ID with highest and lowest no of books issued.
Ans:-highest:-
 select member_id from issue
    -> group by (member_id)
    -> order by count(book_no)
    -> limit 1;

lowest:-
> select member_id from issue
    -> group by member_id
    -> order by count(book_no) desc
    -> limit 1;

27) List all the Issue_details for books issued in December and July
without using any arithmetic, Logical or comparison operator.
Ans:- select * from issue
    -> where month(issue_date) in(12,7);
28) List the Book_No, Book_Name and Issue_date for all the books
that are issued in month of December and belong to category Database.
Ans:- select books.book_no,books.book_name_no,issue.issue_date
    -> from books
    -> left join issue
    -> on books.book_no=issue.book_no
    -> where month(issue_date) in(12);
29) List the Member Id, Member Name and max books allowed in the
descending order of the max books allowed.
Ans:-> select member_id,member_name,max_books_allowed
    -> from member
    -> order by max_books_allowed desc;
30) List the Book No, Book Name, Issue_date and Return_Date for all
the books issued by Richa Sharma.
Ans:-select books.book_no,books.book_name,issue.issue_date,issue.return_date
    -> from books
    -> join issue
    -> on books.book_no=issue.book_no
    -> where books.name="Richa Sharma";
31) List the details of all the members that have issued books in
Database category.
Ans:-select member.*
    -> from member
    -> join issue
    -> on member.member_id=issue.member_id
    -> join books
    -> on issue.book_no=books.book_no
    -> where category="Database";

32) List all the books that have highest price in their own category.
Ans:- select * from books b1
    -> where b1.cost=(select max(b2.cost) from books b2
    -> where b1.category=b2.category);
33) List all the Issue_Details where Issue_date is not within the
Acc_open_date and Return_date for that member.
Ans:- select * from issue i
    -> join member m
    -> where i.issue_date<m.acc_open_date or i.issue_date>i.return_date;

34) List all the members that have not issued a single book so far.
Ans:- select m.* from member m
    -> left join issue i
    -> on m.member_id=i.member_id 
    -> where issue_date is NULL;

36) List the Book_Name, Price of all the books that are not returned
for more then 30 days.
 Ans:-select b.book_name,b.cost
    -> from books b
    -> left join issue i
    -> on b.book_no=i.book_no
    -> where datediff(return_date,issue_date)>30;

Ans:- select book_name,count(author_name)
    -> from books
    -> group by book_name
    -> having count(author_name)>1;
39) List the details of highest 3 priced books.
Ans:-select * from books
    -> order by cost desc
    -> limit 3;

40) List the total cost of all the books that are currently issued but not
returned.
Ans:-select b.book_name,b.cost
    -> from books b
    -> inner join issue i
    -> on b.book_no=i.book_no
    -> where i.return_date is NULL;
41) List the details of the book that has been issued maximum no of times.
Ans:- select book_no,count(*) from issue
    -> where issue_date is not null
    -> group by book_no;

42) List how many books are issued to lifetime members. select i.book_no,count(*)
    Ans:--> from issue i
    -> join member m
    -> on i.member_id=m.member_id
    -> where m.membership_type="lifetime"
    -> group by i.book_no;

43) List all member types and how many members are there in each type.
Ans:- select membership_type,count(*)
    -> from member
    -> group by membership_type;
44) List first 5 members who had joined library.
Ans:-
mysql> select m.member_name
    -> from member m
    -> join issue i
    -> on m.member_id=i.member_id
    -> limit 5;
45) List the members with their member type, who have issued books during the period 1st December to 31st December.
Ans:-
mysql> select member_name,membership_type
    -> from member m
    -> join issue i
    -> on m.member_id=i.member_id
    -> where month(issue_date)=12;
46) List all the members who have not returned books yet.
Ans:- select m.* from member m
    -> join issue i
    -> on m.member_id=i.member_id
    -> where return_date is NULL;
48) List all the members who has issued books from author “Loni” int he month of December
ans:- select b.book_no
    -> from books b
    -> join issue i
    -> on b.book_no=i.book_no
    -> where b.author_name="Loni" and month(issue_date)=12

49) List names of the authors whose books are least issued by lifetime members/
Ans:-select b.author_name
    -> from books b
    -> join issue i
    -> on b.book_no=i.book_no
    -> join member m
    -> on i.member_id=m.member_id
    -> where m.membership_type="lifetime";

50) List the names of members who has issued the books whose cost
is more than 300 rupees and whose author is “Scott Urman”
Ans:-select m.* from member m
    -> join issue i
    -> on m.member_id=i.member_id
    -> join books b
    -> on i.book_no=b.book_no
    -> where b.cost>300 and b.author_name="Scott Urman";
51) List all lifetime members who joined library during 1st January
2006 to 31st December 2006 but issued only one book.
Ans:-select m.*
from member m
join (
    select member_id
    from issue
    group by member_id
    having count (*) = 1
) i ON m.member_id = i.member_id
WHERE m.membership_type = 'lifetime'
  AND m.acc_open_date BETWEEN '2006-01-01' AND '2006-12-31';

52) Modify the Penalty_Amount for Garima Sen to Rs 100.
Ans:-update member
    -> set penalty_amount=100
    -> where member_name="Garime sen";